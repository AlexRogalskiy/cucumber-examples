buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.5"
    }
}

apply plugin: 'java'

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/neotechlv/releases" }
}

def cucumberVersion = '4.3.0'
def allureVersion = '2.13.0'

def testContainersVersion='1.12.0'
def retrofitVersion = '2.3.0'
def accTestFrameworkVersion = '1.3.0'


dependencies {
    implementation("io.github.prashant-ramcharan:courgette-jvm:3.3.0")

    implementation("io.cucumber:cucumber-guice:${cucumberVersion}")
    implementation("com.google.inject:guice:4.1.0")
    implementation("com.mycila.guice.extensions:mycila-guice-jsr250:4.0.rc1")
    implementation("com.mycila.guice.extensions:mycila-guice-closeable:4.0.rc1")
    testCompile("io.qameta.allure:allure-cucumber4-jvm:${allureVersion}")
    compile 'io.qameta.allure:allure-gradle:2.8.1'
    testImplementation 'com.codeborne:selenide:5.3.1'


    testCompile("com.codeborne:selenide:5.2.2")
    compile("org.projectlombok:lombok:1.18.10")
    compile("org.assertj:assertj-core:3.11.1")


    testCompile("org.testcontainers:testcontainers:${testContainersVersion}")
    testCompile("org.testcontainers:selenium:${testContainersVersion}")
// no need for cucumber dependecies, since courgetet already have them - 3.3.0 - depends on cucumber 4.3.0
//    compile("io.cucumber:cucumber-java:${cucumberVersion}")
//    compile("io.cucumber:cucumber-guice:${cucumberVersion}")
//    compile("io.cucumber:cucumber-junit:${cucumberVersion}")


    // RETROFIT
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-scalars:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-jackson:${retrofitVersion}"


    implementation "ch.qos.logback:logback-core:1.2.1"
    implementation "ch.qos.logback:logback-classic:1.2.1"

    implementation("org.projectlombok:lombok:1.18.10")


    compile("lv.neotech.tests:wiremock-extension:${accTestFrameworkVersion}") {
        exclude group: 'info.cukes', module: 'cucumber-java'
        exclude group: 'info.cukes', module: 'cucumber-java8'
        exclude group: 'info.cukes', module: 'cucumber-junit'
        exclude group: 'info.cukes', module: 'cucumber-guice'
        exclude group: 'io.qameta.allure', module: 'allure-cucumber-jvm'
        exclude group: 'io.qameta.allure', module: 'allure-cucumber-jvm'
        exclude group: 'io.qameta.allure', module: 'allure-java-commons'
        exclude group: 'io.qameta.allure', module: 'allure-junit4'
        exclude group: 'io.qameta.allure', module: 'allure-junit4-aspect'
        exclude group: 'org.assertj', module: 'assertj-core'
        exclude group: 'io.qameta.allure', module: 'allure-assertj'
    }
    compile("lv.neotech.tests:test-framework-core:${accTestFrameworkVersion}") {
        exclude group: 'info.cukes', module: 'cucumber-java'
        exclude group: 'info.cukes', module: 'cucumber-java8'
        exclude group: 'info.cukes', module: 'cucumber-junit'
        exclude group: 'info.cukes', module: 'cucumber-guice'
        exclude group: 'io.qameta.allure', module: 'allure-cucumber-jvm'
        exclude group: 'io.qameta.allure', module: 'allure-java-commons'
        exclude group: 'io.qameta.allure', module: 'allure-junit4'
        exclude group: 'io.qameta.allure', module: 'allure-junit4-aspect'
        exclude group: 'org.assertj', module: 'assertj-core'
        exclude group: 'io.qameta.allure', module: 'allure-assertj'
    }

}

apply plugin: 'io.qameta.allure'

allure {
    version = '2.13.0'

    autoconfigure = true
    configuration = 'compile'

    aspectjweaver = true
    aspectjVersion = '1.8.10'

    resultsDir = file("${rootDir}/build/allure-results")
    reportDir = file("${rootDir}/build/reports/allure-report")

    downloadLink = "https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/${allureVersion}/allure-commandline-${allureVersion}.zip"
}
